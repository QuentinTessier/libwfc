#!/bin/sh

# This is a VERY hacky way of making `sdl2-config ...` work on Windows.
# If VC is used as linker, use these flags in gcc and clang:
#   -D_CRT_SECURE_NO_WARNINGS
#   -Xlinker /subsystem:windows -lshell32 (to not start the terminal)
#   -Xlinker /subsystem:console -lshell32 (to keep the terminal)
# Executables names (specified with -o compiler flag) should end with '.exe'.

# Change this value to the directory that holds SDL2 project directories.
# Check -I and -L options below to see what directory structure is expected.
prefix="C:\SDL2"
exec_prefix=${prefix}
exec_prefix_set=no

#usage="\
#Usage: $0 [--prefix[=DIR]] [--exec-prefix[=DIR]] [--version] [--cflags] [--libs]"
usage="\
Usage: $0 [--prefix[=DIR]] [--exec-prefix[=DIR]] [--version] [--cflags] [--libs] [--static-libs]"

if test $# -eq 0; then
      echo "${usage}" 1>&2
      exit 1
fi

while test $# -gt 0; do
  case "$1" in
  -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
  *) optarg= ;;
  esac

  case $1 in
    --prefix=*)
      prefix=$optarg
      if test $exec_prefix_set = no ; then
        exec_prefix=$optarg
      fi
      ;;
    --prefix)
      echo $prefix
      ;;
    --exec-prefix=*)
      exec_prefix=$optarg
      exec_prefix_set=yes
      ;;
    --exec-prefix)
      echo $exec_prefix
      ;;
    --version)
      echo 2.28.1
      ;;
    --cflags)
      echo "-I${prefix}\SDL2\include -I${prefix}\SDL2_image\include -I${prefix}\SDL2_ttf\include -I${prefix}\SDL2_mixer\include -I${prefix}\SDL2_net\include -Dmain=SDL_main"
      ;;
    --libs)
      echo "-L${prefix}\SDL2\lib\x64 -L${prefix}\SDL2_image\lib\x64 -L${prefix}\SDL2_ttf\lib\x64 -L${prefix}\SDL2_mixer\lib\x64 -L${prefix}\SDL2_net\lib\x64 -lSDL2main -lSDL2"
      ;;
    --static-libs)
#    --libs|--static-libs)
      echo "I was too lazy to figure out --static-libs." 1>&2
      exit 1
      ;;
    *)
      echo "${usage}" 1>&2
      exit 1
      ;;
  esac
  shift
done
